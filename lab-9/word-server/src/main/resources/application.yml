spring:
  config:
    import: "optional:configserver:http://localhost:8001"    # Where should we call the config server at?

server:
  port: ${PORT:${SERVER_PORT:0}}   # Select any available port if neither port nor server port are specified.


# The Spring Cloud Gateway uses Netty, which has trouble resolving a windows hostname.
# To resolve this, instruct Eureka to use localhost as the hostname.
eureka:
  instance:
    hostname: localhost

words: fallback

# Expose Actuator endpoints.  Allow application to be more useful from Eureka.
management:
  endpoints.web.exposure.include: health,info,beans,env,configprops,prometheus
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    env.enabled: true
    java.enabled: true
    os.enabled: true
    process.enabled: true
info.active-profiles: ${spring.profiles.active:none}
info.name: ${spring.application.name:none}

# Depending on which profile is active, the application gives
# itself a different name when registering with Eureka
---
spring:
  config.activate.on-profile: subject
  application:
    name: subject

---
spring:
  config.activate.on-profile: verb
  application:
    name: verb

---
spring:
  config.activate.on-profile: article
  application:
    name: article

---
spring:
  config.activate.on-profile: adjective
  application:
    name: adjective

---
spring:
  config.activate.on-profile: noun
  application:
    name: noun


# This profile is used when running JUnit tests locally.  A spring.application.name must be provided.
---
spring:
  config.activate.on-profile: local-test
  application:
    name: local
